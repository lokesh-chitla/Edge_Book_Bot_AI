# -*- coding: utf-8 -*-
"""Edge_Book_Bot_AI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jcifAxqQQ4JHlWduChKcn9p0yEULJBC1

<h2>Develop an AI-powered learning companion that leverages Gemini's advanced language understanding and generation capabilities to create a personalized and engaging learning experience for students across various subjects. </h2>

Edge AI with Book Bot.
"""

!pip install nltk PyMuPDF transformers torch

import fitz  # PyMuPDF
import torch
from transformers import pipeline
from google.colab import files
import logging

# Set logging level to suppress warnings
logging.getLogger("transformers").setLevel(logging.ERROR)

class Ebook:
    def __init__(self, filepath):
        self.filepath = filepath
        self.content = self.load_ebook()

    def load_ebook(self):
        # Load text from a PDF file
        text = ""
        with fitz.open(self.filepath) as pdf:
            for page in pdf:
                text += page.get_text()
        return text

class QASystem:
    def __init__(self):
        self.qa_pipeline = pipeline("question-answering")

    def answer_question(self, question, context):
        return self.qa_pipeline(question=question, context=context)

def upload_ebook():
    uploaded = files.upload()
    for filename in uploaded.keys():
        return filename

# Main interaction loop
ebook_file = upload_ebook()
ebook = Ebook(ebook_file)
qa_system = QASystem()

print("eBook uploaded successfully!")

while True:
    query = input("Ask a question (or type 'exit' to quit): ")
    if query.lower() == 'exit':
        break

    answer = qa_system.answer_question(query, ebook.content)
    print("Bot: ", answer['answer'])
